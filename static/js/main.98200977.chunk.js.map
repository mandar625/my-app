{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Alert","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","cap","msg","Textform","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","placeholder","newText","toLocaleUpperCase","showAlert","toLocaleLowerCase","copyText","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","trim","split","length","replace","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.98200977.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <nav className= {`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li> */}\r\n\r\n            </ul>\r\n            {/* <form classNameName=\"d-flex\">\r\n              <input classNameName=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button classNameName=\"btn btn-outline-danger\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark Mode</label>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes = { title: PropTypes.string,\r\n                    aboutText: PropTypes.string\r\n                \r\n}\r\n\r\n// konsi value pass ki jajaye agar me kuch pass na karu tos\r\nNavbar.defaultProps = { title: \"khersdffbg\",\r\n                    aboutText: \"rfgbdsdsf\"\r\n                \r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const cap = (word)=>{\r\n         \r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n\r\n    }\r\n    return (\r\n        \r\n           props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n               <strong> {cap(props.alert.type)} </strong> : {props.alert.msg}\r\n                \r\n            </div>\r\n        \r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick =()=>{\r\n\r\n        // console.log(\" upper case was click\" + text)\r\n        let newText= text.toLocaleUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\" converted to uppercase \" , \"success\")\r\n\r\n\r\n    }\r\n    const handleLowClick =()=>{\r\n\r\n        // console.log(\" upper case was click\" + text)\r\n        let newText= text.toLocaleLowerCase()\r\n        setText(newText)\r\n        // alert(\"jbhjf\")\r\n        props.showAlert(\" converted  to lowercase\" , \"success\")\r\n\r\n\r\n    }\r\n    const handleLClClick=()=>{\r\n\r\n        // console.log(\" upper case was click\" + text)\r\n        let newText= \"\"\r\n        setText(newText)\r\n        props.showAlert(\" cleared\" , \"success\")\r\n\r\n\r\n    }\r\n    const cpoy=()=>{\r\n\r\n                   \r\n            var copyText = document.getElementById(\"mybox\");\r\n           \r\n\r\n            \r\n            copyText.select();\r\n            copyText.setSelectionRange(0, 99999); \r\n\r\n            navigator.clipboard.writeText(copyText.value);\r\n            \r\n            \r\n            alert(\"Copied the text: \" + copyText.value);\r\n\r\n\r\n    }\r\n    \r\n    const handleOnChange =(event)=>{\r\n\r\n        // console.log(\" on change\")\r\n        setText(event.target.value)\r\n\r\n\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    // setText=(\" new stste\")\r\n    return (\r\n        <>\r\n        <div  className=\"Ccontainer\" style={{color: props.mode===\"dark\"?\"white\":\"black\"}}>\r\n\r\n\r\n\r\n\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n               \r\n                <textarea className=\"form-control my-5\"  value={text} onChange={handleOnChange}  style={{backgroundColor: props.mode===\"dark\"?\"grey\":\"white\", color: props.mode===\"dark\"?\"white\":\"black\"}} id=\"mybox\" rows=\"8\" \r\n                placeholder=\" Enter the Text to Analyzie \" ></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick} >Convert To Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLowClick} >Convert To lowwercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLClClick} >Clear</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={cpoy} >copy to clipboard</button>\r\n            {/* <button className=\"btn btn-primary mx-2\" onClick={handleSpace} >Change word</button> */}\r\n\r\n        </div>\r\n        \r\n        <div className=\"container my-3\" style={{color: props.mode===\"dark\"?\"white\":\"black\"}}>\r\n\r\n            <h2>\r\n                Your Text summay\r\n            </h2>\r\n            <p>{text.trim().split(/\\s+/).length} Words, {text.replace(/ /g,\"\").length}characters</p>\r\n            <p>{ 0.008*text.split(\" \").length} Minutes to Read</p>\r\n            \r\n            <p>{text.split(\" \").length - 1}  Spaces</p>\r\n            <h3>Preview</h3>\r\n            <p>{text.length>0? text: \" kuch likho upar\"}</p>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Alert from \"./components/Alert\";\n// import About from './components/About';\nimport Textform from \"./components/Textform\";\nimport React, { useState } from \"react\";\n\n// import { BrowserRouter as Router, Switch, Route  } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  // whethere dark mode is on or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1200);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\"dark mode is on \", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode is on \", \"success\");\n    }\n  };\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar\n        title=\"Mandar Marathe\"\n        aboutText=\"About Us\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n\n          {/* <Route exact path=\"/\"> */}\n            <Textform\n              showAlert={showAlert}\n              heading=\" Enter The text to analyise Below\"\n              mode={mode}\n            />\n          {/* </Route> */}\n        {/* </Switch> */}\n        {/* <About/> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}